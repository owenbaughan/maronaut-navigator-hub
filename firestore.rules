rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /userProfiles/{userId} {
      allow read: if request.auth != null; // Any authenticated user can read profiles
      allow write: if request.auth.uid == userId; // Only users can modify their own profiles
    }
    
    // Rules for the following collection - one-way relationship
    match /following/{docId} {
      // Allow read if the user is the follower or being followed
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         resource.data.followingId == request.auth.uid);
      
      // Allow create if the user is the follower
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
         
      // Allow update/delete if the user is the follower
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Rules for the followRequests collection (for non-auto-accept follow requests)
    match /followRequests/{docId} {
      // Allow read if the user is the sender or receiver
      allow read: if request.auth != null && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
         
      // Allow create if the user is the sender
      allow create: if request.auth != null && 
        request.resource.data.senderId == request.auth.uid;
        
      // Allow update/delete if the user is the sender or receiver
      allow update, delete: if request.auth != null && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
    }
    
    // Keep legacy rules for backward compatibility (same as followRequests)
    match /friendRequests/{docId} {
      // Allow read if the user is the sender or receiver
      allow read: if request.auth != null && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
         
      // Allow create if the user is the sender
      allow create: if request.auth != null && 
        request.resource.data.senderId == request.auth.uid;
        
      // Allow update/delete if the user is the sender or receiver
      allow update, delete: if request.auth != null && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
    }
    
    // Keep legacy rules for friends collection
    match /friends/{docId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         resource.data.friendId == request.auth.uid);
      allow create: if request.auth != null && 
        (request.resource.data.userId == request.auth.uid || 
         request.resource.data.friendId == request.auth.uid);
      allow update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         resource.data.friendId == request.auth.uid);
    }
  }
}
